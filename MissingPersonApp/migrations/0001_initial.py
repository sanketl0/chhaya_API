# Generated by Django 5.1.2 on 2024-10-23 09:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('village', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Missing Person', 'Missing Person'), ('Undefined Missing Person', 'Undefined Missing Person'), ('Undefined Body', 'Undefined Body'), ('Volunteer', 'Volunteer')], max_length=50)),
                ('subtype', models.CharField(choices=[('Permanent Address', 'Permanent Address'), ('Current Address', 'Current Address'), ('Emergency', 'Emergency')], max_length=50)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address_type', models.CharField(blank=True, max_length=255, null=True)),
                ('apartment_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('country_code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Missing Person', 'Missing Person'), ('Undefined Missing Person', 'Undefined Missing Person'), ('Undefined Body', 'Undefined Body'), ('Volunteer', 'Volunteer')], max_length=50)),
                ('subtype', models.CharField(choices=[('Personal', 'Personal'), ('Business', 'Business'), ('Emergency', 'Emergency')], max_length=50)),
                ('subtype_detail', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('social_media_handles', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MissingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('age', models.PositiveIntegerField()),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=20)),
                ('time_of_birth', models.TimeField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('height', models.FloatField(help_text='Height in cm')),
                ('weight', models.FloatField(help_text='Weight in kg')),
                ('complexion', models.CharField(choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], max_length=20)),
                ('hair_color', models.CharField(choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], max_length=20)),
                ('hair_type', models.CharField(choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], max_length=20)),
                ('eye_color', models.CharField(choices=[('Dark Brown', 'Dark Brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], max_length=20)),
                ('birth_mark', models.TextField(blank=True, null=True)),
                ('distinctive_mark', models.TextField(blank=True, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('photo_upload', models.ImageField(blank=True, null=True, upload_to='Missingperson_photos/')),
                ('Condition', models.CharField(blank=True, choices=[('Memory loss', 'Memory loss'), ('Shock', 'Shock')], max_length=20, null=True)),
                ('caste', models.CharField(choices=[('Open', 'Open'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC')], max_length=50)),
                ('sub_caste', models.CharField(blank=True, max_length=100, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed')], max_length=20)),
                ('religion', models.CharField(choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Sikh', 'Sikh'), ('Christian', 'Christian')], max_length=50)),
                ('mother_tongue', models.CharField(choices=[('Hindi', 'Hindi'), ('English', 'English'), ('Marathi', 'Marathi')], max_length=50)),
                ('other_known_languages', models.CharField(blank=True, help_text='Comma-separated list of languages', max_length=255, null=True)),
                ('educational_details', models.TextField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('identification_details', models.CharField(choices=[('Aadhar Card', 'Aadhar Card'), ('Pan Card', 'Pan Card'), ('Driving License', 'Driving License'), ('Passport', 'Passport')], max_length=50)),
                ('identification_card_no', models.PositiveIntegerField()),
                ('missing_time', models.TimeField()),
                ('missing_date', models.DateField()),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location_details', models.TextField(blank=True, null=True)),
                ('last_seen_location', models.TextField(blank=True, null=True)),
                ('fir_number', models.PositiveIntegerField()),
                ('fir_photo', models.BinaryField(blank=True, null=True)),
                ('police_station_name_address', models.TextField()),
                ('investigating_officer_name', models.CharField(max_length=255)),
                ('investigating_officer_contact_number', models.CharField(max_length=15)),
                ('reportingperson_name', models.CharField(max_length=255)),
                ('relationship_with_victim', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Friend', 'Friend')], max_length=50)),
                ('contact_numbers', models.CharField(blank=True, help_text='Contact number(s) of the reporting person', max_length=20, null=True)),
                ('email_address', models.EmailField(blank=True, help_text='Email address of the reporting person', max_length=255, null=True)),
                ('willing_to_volunteer', models.BooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missing_person', to='MissingPersonApp.address')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missing_person', to='MissingPersonApp.contact')),
            ],
        ),
        migrations.CreateModel(
            name='UnidentifiedBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('estimated_age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=20)),
                ('date_found', models.DateField()),
                ('estimated_time_of_death', models.TimeField(blank=True, null=True)),
                ('height', models.FloatField(help_text='Height in cm')),
                ('weight', models.FloatField(help_text='Weight in kg')),
                ('complexion', models.CharField(choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], max_length=50)),
                ('hair_color', models.CharField(choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], max_length=50)),
                ('hair_type', models.CharField(choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], max_length=50)),
                ('eye_color', models.CharField(choices=[('Dark Brown', 'Dark Brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], max_length=50)),
                ('birth_mark', models.TextField(blank=True, max_length=100, null=True)),
                ('other_distinctive_mark', models.TextField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=20)),
                ('body_photo_upload', models.FileField(blank=True, null=True, upload_to='body_photos/')),
                ('clothing_description', models.TextField(blank=True, max_length=100, null=True)),
                ('last_seen_details', models.TextField(blank=True, max_length=100, null=True)),
                ('fir_number', models.IntegerField(help_text='FIR Number assigned for the case')),
                ('fir_photo', models.FileField(blank=True, help_text='Upload the FIR document', null=True, upload_to='fir_photos/')),
                ('police_station_name_and_address', models.CharField(help_text='Name and address of the police station', max_length=255)),
                ('investigating_officer_name', models.CharField(help_text='Name of the investigating police officer', max_length=50)),
                ('investigating_officer_contact_number', models.CharField(help_text='Contact number of the investigating officer', max_length=15)),
                ('fingerprints_collected', models.FileField(blank=True, help_text='Upload fingerprints collected', null=True, upload_to='fingerprints/')),
                ('dna_sample_collected', models.FileField(blank=True, help_text='Upload DNA samples collected', null=True, upload_to='dna_samples/')),
                ('post_mortem_report_upload', models.FileField(blank=True, help_text='Upload the post-mortem report', null=True, upload_to='post_mortem_reports/')),
                ('is_deleted', models.BooleanField(default=False)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='MissingPersonApp.address')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='MissingPersonApp.contact')),
            ],
        ),
        migrations.CreateModel(
            name='UnidentifiedMissingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('estimated_age', models.PositiveIntegerField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=50, null=True, verbose_name='Gender')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height (cm)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('birth_mark', models.TextField(blank=True, max_length=255, null=True)),
                ('complexion', models.CharField(blank=True, choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], max_length=50, null=True, verbose_name='Complexion')),
                ('hair_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], max_length=50, null=True, verbose_name='Hair Color')),
                ('hair_type', models.CharField(blank=True, choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], max_length=50, null=True, verbose_name='Hair Type')),
                ('eye_color', models.CharField(blank=True, choices=[('Dark brown', 'Dark brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], max_length=50, null=True, verbose_name='Eye Color')),
                ('other_distinctive_mark', models.TextField(blank=True, null=True)),
                ('photo_upload', models.ImageField(blank=True, null=True, upload_to='photos/', verbose_name='Photo Upload')),
                ('caste', models.CharField(blank=True, choices=[('Open', 'Open'), ('SC', 'Scheduled Caste'), ('ST', 'Scheduled Tribe')], max_length=50, null=True, verbose_name='Caste')),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed')], max_length=50, null=True, verbose_name='Marital Status')),
                ('religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Sikh', 'Sikh')], max_length=50, null=True, verbose_name='Religion')),
                ('other_known_languages', models.CharField(blank=True, choices=[('Hindi', 'Hindi'), ('Marathi', 'Marathi'), ('Bengali', 'Bengali')], max_length=255, null=True, verbose_name='Other Known Languages')),
                ('identification_details', models.TextField(blank=True, null=True, verbose_name='Identification Details')),
                ('last_location', models.TextField(blank=True, null=True, verbose_name='Last Location of Missing Person')),
                ('last_seen_details', models.TextField(blank=True, null=True, verbose_name='Last Seen Details/Sighting Details')),
                ('condition_at_discovery', models.CharField(blank=True, choices=[('Memory loss', 'Memory loss'), ('Shock', 'Shock'), ('Injured', 'Injured'), ('Other', 'Other')], max_length=50, null=True, verbose_name='Condition at Discovery')),
                ('reporting_person_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Reporting Person')),
                ('reporting_person_contact_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact Number(s)')),
                ('reporting_person_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('relationship_with_victim', models.CharField(blank=True, max_length=255, null=True, verbose_name='Relationship with Victim')),
                ('availability_for_search_operations', models.CharField(blank=True, max_length=50, null=True, verbose_name='Availability for Search Operations')),
                ('preferred_mode_of_communication', models.CharField(blank=True, max_length=50, null=True, verbose_name='Preferred Mode of Communication')),
                ('access_to_vehicle', models.BooleanField(default=False, verbose_name='Access to Vehicle for Search Operations')),
                ('special_skills', models.TextField(blank=True, null=True, verbose_name='Special Skills')),
                ('previous_search_experience', models.TextField(blank=True, null=True, verbose_name='Details of Previous Search Experience')),
                ('upload_evidence', models.FileField(blank=True, null=True, upload_to='evidence/', verbose_name='Upload Evidence (e.g., photos, notes)')),
                ('founded_data', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Undefined_missing_person', to='MissingPersonApp.address')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Undefined_missing_person', to='MissingPersonApp.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_percentage', models.FloatField()),
                ('missing_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MissingPersonApp.missingperson')),
                ('unidentified_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MissingPersonApp.unidentifiedbody')),
                ('undefined_missing_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MissingPersonApp.unidentifiedmissingperson')),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('dob', models.DateField(help_text='Date of Birth')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('volunteer_group', models.CharField(choices=[('Group A', 'Group A'), ('Group B', 'Group B'), ('Group C', 'Group C')], max_length=50)),
                ('assigned_region', models.CharField(help_text='Region assigned to the volunteer', max_length=100)),
                ('search_start_date', models.DateField()),
                ('search_end_date', models.DateField(blank=True, null=True)),
                ('search_timing', models.TimeField(help_text="Timing for the volunteer's search")),
                ('gps_tracker_enabled', models.BooleanField(default=False, help_text='Does the volunteer have GPS tracking?')),
                ('mode_of_search', models.CharField(choices=[('On Foot', 'On Foot'), ('Vehicle', 'Vehicle'), ('Drone', 'Drone')], max_length=50)),
                ('other_equipment_issued', models.TextField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=20)),
                ('known_allergies', models.TextField(blank=True, max_length=100, null=True)),
                ('pre_existing_medical_conditions', models.TextField(blank=True, max_length=200, null=True)),
                ('emergency_contact_name', models.CharField(max_length=50)),
                ('emergency_contact_number', models.CharField(max_length=15)),
                ('relationship_with_volunteer', models.CharField(help_text='Relationship with the volunteer (e.g., Father, Mother, Spouse)', max_length=50)),
                ('feedback_after_search', models.TextField(blank=True, max_length=200, null=True)),
                ('issues_faced_during_search', models.TextField(blank=True, max_length=200, null=True)),
                ('additional_suggestions', models.TextField(blank=True, max_length=200, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='MissingPersonApp.address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='MissingPersonApp.contact')),
            ],
        ),
    ]
